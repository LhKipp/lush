1
===
fn asf {} ((
impl Rule for BlockStmtRule {
    fn matches(&self, p: &mut Parser) -> bool {
        assert!(self.parse_begin);
        p.next_non(CMT_NL_WS) == BeginKeyword
    }

let x = 1
---
- Start: SourceFile
- Start: BlockStmt
- Start: FnStmt
- Token: "FnKeyword (len: 2)"
- Token: "Whitespace (len: 1)"
- Token: "FnDeclName (len: 3)"
- Token: "Whitespace (len: 1)"
- Error: "MessageAt(\"expected Newline\", 7)"
- Start: BlockStmt
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt, but found LeftCurlyBrackets\", 7)"
- Error: "MessageAt(\"expected EndKeyword\", 7)"
- Finish: ""
- Finish: ""
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt | UseStmt | FnStmt | StructStmt, but found LeftCurlyBrackets\", 7)"
- Start: Error
- Token: "LeftCurlyBrackets (len: 1)"
- Token: "RightCurlyBrackets (len: 1)"
- Token: "Whitespace (len: 1)"
- Token: "LeftParenthesis (len: 1)"
- Token: "LeftParenthesis (len: 1)"
- Finish: ""
- Token: "Newline (len: 1)"
- Start: Tombstone
- Start: CmdStmt
- Token: "BareWord (len: 4)"
- Token: "Whitespace (len: 1)"
- Token: "BareWord (len: 4)"
- Finish: ""
- Token: "Whitespace (len: 1)"
- Start: ForStmt
- Token: "ForKeyword (len: 3)"
- Token: "Whitespace (len: 1)"
- Token: "VarDeclName (len: 13)"
- Token: "Whitespace (len: 1)"
- Error: "MessageAt(\"expected InKeyword\", 41)"
- Error: "MessageAt(\"Expected an expression\", 41)"
- Token: "LeftCurlyBrackets (len: 1)"
- Token: "Newline (len: 1)"
- Start: BlockStmt
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt, but found FnKeyword\", 43)"
- Token: "Whitespace (len: 4)"
- Error: "MessageAt(\"expected EndKeyword\", 47)"
- Finish: ""
- Finish: ""
- Start: FnStmt
- Token: "FnKeyword (len: 2)"
- Token: "Whitespace (len: 1)"
- Token: "FnDeclName (len: 7)"
- Start: Signature
- Token: "LeftParenthesis (len: 1)"
- Error: "MessageAt(\"expected RightParenthesis\", 58)"
- Finish: ""
- Error: "MessageAt(\"expected Newline\", 58)"
- Start: BlockStmt
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt, but found Error\", 58)"
- Error: "MessageAt(\"expected EndKeyword\", 58)"
- Finish: ""
- Finish: ""
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt | UseStmt | FnStmt | StructStmt, but found Error\", 58)"
- Start: Error
- Token: "Error (len: 1)"
- Finish: ""
- Start: Tombstone
- Start: CmdStmt
- Token: "BareWord (len: 4)"
- Finish: ""
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt | UseStmt | FnStmt | StructStmt, but found Error\", 63)"
- Start: Error
- Token: "Error (len: 1)"
- Finish: ""
- Token: "Whitespace (len: 1)"
- Start: Tombstone
- Start: CmdStmt
- Token: "BareWord (len: 1)"
- Finish: ""
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt | UseStmt | FnStmt | StructStmt, but found DoublePoint\", 66)"
- Start: Error
- Token: "DoublePoint (len: 1)"
- Token: "Whitespace (len: 1)"
- Token: "Error (len: 1)"
- Finish: ""
- Start: Tombstone
- Start: CmdStmt
- Token: "BareWord (len: 3)"
- Token: "Whitespace (len: 1)"
- Token: "BareWord (len: 6)"
- Finish: ""
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt | UseStmt | FnStmt | StructStmt, but found RightParenthesis\", 79)"
- Start: Error
- Token: "RightParenthesis (len: 1)"
- Token: "Whitespace (len: 1)"
- Token: "MinusSign (len: 1)"
- Token: "BiggerThanSign (len: 1)"
- Token: "Whitespace (len: 1)"
- Token: "BoolKeyword (len: 4)"
- Token: "Whitespace (len: 1)"
- Token: "LeftCurlyBrackets (len: 1)"
- Finish: ""
- Token: "Newline (len: 1)"
- Token: "Whitespace (len: 8)"
- Start: Tombstone
- Start: CmdStmt
- Token: "BareWord (len: 6)"
- Finish: ""
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt | UseStmt | FnStmt | StructStmt, but found Error\", 105)"
- Start: Error
- Token: "Error (len: 1)"
- Token: "LeftParenthesis (len: 1)"
- Finish: ""
- Start: Tombstone
- Start: CmdStmt
- Token: "BareWord (len: 4)"
- Finish: ""
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt | UseStmt | FnStmt | StructStmt, but found Point\", 111)"
- Start: Error
- Token: "Point (len: 1)"
- Finish: ""
- Start: Tombstone
- Start: CmdStmt
- Token: "BareWord (len: 11)"
- Finish: ""
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt | UseStmt | FnStmt | StructStmt, but found RightParenthesis\", 123)"
- Start: Error
- Token: "RightParenthesis (len: 1)"
- Token: "Error (len: 1)"
- Finish: ""
- Token: "Newline (len: 1)"
- Token: "Whitespace (len: 8)"
- Start: Tombstone
- Start: CmdStmt
- Token: "BareWord (len: 1)"
- Finish: ""
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt | UseStmt | FnStmt | StructStmt, but found Point\", 135)"
- Start: Error
- Token: "Point (len: 1)"
- Finish: ""
- Start: Tombstone
- Start: CmdStmt
- Token: "BareWord (len: 8)"
- Finish: ""
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt | UseStmt | FnStmt | StructStmt, but found LeftParenthesis\", 144)"
- Start: Error
- Token: "LeftParenthesis (len: 1)"
- Finish: ""
- Start: Tombstone
- Start: CmdStmt
- Token: "BareWord (len: 9)"
- Finish: ""
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt | UseStmt | FnStmt | StructStmt, but found RightParenthesis\", 154)"
- Start: Error
- Token: "RightParenthesis (len: 1)"
- Token: "Whitespace (len: 1)"
- Token: "EqualitySign (len: 2)"
- Finish: ""
- Token: "Whitespace (len: 1)"
- Start: Tombstone
- Start: CmdStmt
- Token: "BareWord (len: 12)"
- Finish: ""
- Error: "MessageAt(\"Expected let statement | piped commands | RetStmt | ForStmt | IfStmt | expressions | BlockStmt | UseStmt | FnStmt | StructStmt, but found RightCurlyBrackets\", 171)"
- Start: Error
- Token: "Newline (len: 1)"
- Token: "Whitespace (len: 4)"
- Token: "RightCurlyBrackets (len: 1)"
- Finish: ""
- Start: LetStmt
- Token: "Newline (len: 1)"
- Token: "Newline (len: 1)"
- Token: "LetKeyword (len: 3)"
- Token: "Whitespace (len: 1)"
- Token: "VarDeclName (len: 1)"
- Token: "Whitespace (len: 1)"
- Token: "AssignSign (len: 1)"
- Token: "Whitespace (len: 1)"
- Start: Tombstone
- Start: NumberExpr
- Token: "Number (len: 1)"
- Finish: ""
- Finish: ""
- Finish: ""
- Finish: ""
...

