Compatible table expr
===
struct Ratings{ n: num b: bool }
[(Ratings)[1 true] [2 true] [3 true]]
---
{
  "Ok": {
    "Array": {
      "inner_ty": "Unspecified",
      "inner_ty_decl": {
        "content": "[(Ratings)[1 true] [2 true] [3 true]]",
        "range": [
          33,
          70
        ]
      }
    }
  }
}
...
To few values in row
===
struct Ratings{ n: num s: str }
[(Ratings)
    [1]]
---
{
  "Err": [
    {
      "Ty": {
        "TableRowToFewCol": {
          "row": {
            "content": "[1]",
            "range": [
              47,
              50
            ]
          }
        }
      }
    }
  ]
}
...
To many values in row
===
struct Ratings{ n: num s: str }
[(Ratings)
    [1 "lush" 1]]
---
{
  "Err": [
    {
      "Ty": {
        "TableRowToManyCol": {
          "row": {
            "content": "[1 \"lush\" 1]",
            "range": [
              47,
              59
            ]
          }
        }
      }
    }
  ]
}
...
Tables inner ty compatible with strct decl
===
struct Person { name: str }
let persons = [(Person) ["Alice"]]
for pers in $persons
    let x: Person = $pers
end
---
{
  "Ok": null
}
...

