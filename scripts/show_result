#!/bin/fish
function unescape
    set s "$argv"
    printf '%b\n' "$s"
end

function debug
    echo $argv > dbg_out
    echo $argv
end

function run_test
    set result (cargo test $argv 2>/dev/null |
        sed -n -e '/left:/p' |   # Left is the computed value, right is the stored value
        grep -o "`.*`" | # take only text inside "``"
        xargs -0 unescape)
    # extract text in "``"  
    string sub --start 3 --end -3 "$result"
end

function print_yaml
    echo $argv | 
        sed 's/- /\n- /g' | # split lines into: "- kind len"
        tail -n +3 # first 2 lines are trash
end

function print_json
    echo $argv | jq | sed 's/\\\n/\n/g' | sed 's/\\\"/"/g'
end

argparse --ignore-unknown 'input' -- $argv
or exit

set val (run_test $argv)
if set --query _flag_input
    set copy_to_clip true
else
    set copy_to_clip false
end

if string match --quiet --regex "^{" -- $val
    print_json $val
    $copy_to_clip && print_json $val | xsel --input -b
else if string match --quiet --regex "^-" -- $val
    print_yaml $val
    $copy_to_clip && print_yaml $val | xsel --input -b
else if string match --quiet --regex "^tree" -- $val
    echo $val | sed 's/\\\n/\n/g' | sed 's/\\\"/"/g'
end

